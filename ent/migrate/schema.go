// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// ContentColumns holds the columns for the "content" table.
	ContentColumns = []*schema.Column{
		{Name: "filename", Type: field.TypeString, Unique: true},
		{Name: "uploaded_content_filename", Type: field.TypeString},
	}
	// ContentTable holds the schema information for the "content" table.
	ContentTable = &schema.Table{
		Name:       "content",
		Columns:    ContentColumns,
		PrimaryKey: []*schema.Column{ContentColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "content_uploaded_content_contents",
				Columns:    []*schema.Column{ContentColumns[1]},
				RefColumns: []*schema.Column{UploadedContentColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// ContentMovieMetadataColumns holds the columns for the "content_movie_metadata" table.
	ContentMovieMetadataColumns = []*schema.Column{
		{Name: "filename", Type: field.TypeString, Unique: true},
		{Name: "width", Type: field.TypeInt},
		{Name: "height", Type: field.TypeInt},
	}
	// ContentMovieMetadataTable holds the schema information for the "content_movie_metadata" table.
	ContentMovieMetadataTable = &schema.Table{
		Name:       "content_movie_metadata",
		Columns:    ContentMovieMetadataColumns,
		PrimaryKey: []*schema.Column{ContentMovieMetadataColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "content_movie_metadata_content_content_movie_metadata",
				Columns:    []*schema.Column{ContentMovieMetadataColumns[0]},
				RefColumns: []*schema.Column{ContentColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// UploadedContentColumns holds the columns for the "uploaded_content" table.
	UploadedContentColumns = []*schema.Column{
		{Name: "filename", Type: field.TypeString, Unique: true},
	}
	// UploadedContentTable holds the schema information for the "uploaded_content" table.
	UploadedContentTable = &schema.Table{
		Name:       "uploaded_content",
		Columns:    UploadedContentColumns,
		PrimaryKey: []*schema.Column{UploadedContentColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ContentTable,
		ContentMovieMetadataTable,
		UploadedContentTable,
	}
)

func init() {
	ContentTable.ForeignKeys[0].RefTable = UploadedContentTable
	ContentTable.Annotation = &entsql.Annotation{
		Table: "content",
	}
	ContentMovieMetadataTable.ForeignKeys[0].RefTable = ContentTable
	ContentMovieMetadataTable.Annotation = &entsql.Annotation{
		Table: "content_movie_metadata",
	}
	UploadedContentTable.Annotation = &entsql.Annotation{
		Table: "uploaded_content",
	}
}
